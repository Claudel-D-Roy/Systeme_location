@model Tp1_WebApplication.ViewModels.ResetPwdViewModel

@{
    ViewData["Title"] = "New Password";
}

<h1>New Password</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-controller="Account" asp-action="ResetPwd" method="post" class="d-inline-block">
            <div class="form-group">
                <label asp-for="NewPassword">New Password</label>
                <input asp-for="NewPassword" type="password" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="ConfirmNewPassword"></label>
                <div class="input-group toggle-password">
                    <input asp-for="ConfirmNewPassword" class="form-control" value="@Model.ConfirmNewPassword" />
                    <button type="button" class="btn btn-outline-primary">
                        <i class="fa fa-eye"></i>
                    </button>
                </div>
                <span asp-validation-for="ConfirmNewPassword"></span>
            </div>
            <div class="form-group" style="margin-top: 10px;">
                <button type="submit" class="btn btn-primary">Confirm</button>
                <input type="hidden" asp-for="UserId" />
                <a href="@Url.Action("Manage", "User")" class="btn btn-secondary">Annuler</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function togglePasswordVisibility() {
            const passwordButton = $(this);
            const passwordInputs = passwordButton.siblings('input');
            const isPasswordVisible = passwordButton.hasClass('active');

            passwordButton.toggleClass('active');
            passwordInputs.attr('type', isPasswordVisible ? 'password' : 'text');
        }

        const visibilityButtons = $('.toggle-password button');
        visibilityButtons.on('click', togglePasswordVisibility);
        visibilityButtons.trigger('click');
    </script>
}